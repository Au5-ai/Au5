var g=Object.defineProperty;var m=(o,e,r)=>e in o?g(o,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):o[e]=r;var c=(o,e,r)=>m(o,typeof e!="symbol"?e+"":e,r);class d{constructor(e){c(this,"handlers");this.handlers=e}dispatch(e,r){for(const t of this.handlers)if(t.canHandle(e))return t.handle(e,r),!0;return console.warn(`No handler found for message type: ${e.type}`),!1}}class l{constructor(e,r){this.webhook=e,this.storage=r}canHandle(e){return e.type==="meetingEnded"}async handle(){await this.webhook.process(),await this.storage.remove("meeting"),chrome.runtime.reload()}}class E{constructor(e){this.storageService=e}canHandle(e){return e.type==="meetingStarted"}async handle(e){var r;try{const s=(r=(await chrome.tabs.query({active:!0,currentWindow:!0}))[0])==null?void 0:r.id;s!==void 0&&(await this.storageService.set("meetingTabId",s),console.log("Meeting tab id saved"))}catch(t){console.error("Error saving meeting tab ID:",t)}}}class u{async remove(e){return new Promise((r,t)=>{chrome.storage.local.remove(e,()=>{if(chrome.runtime.lastError)return t(chrome.runtime.lastError);r()})})}async set(e,r){return new Promise((t,s)=>{chrome.storage.local.set({[e]:r},()=>{if(chrome.runtime.lastError)return s(chrome.runtime.lastError);t(r)})})}async get(e){const r=Array.isArray(e)?e:[e];return new Promise((t,s)=>{chrome.storage.local.get(r,h=>{if(chrome.runtime.lastError)return s(chrome.runtime.lastError);t(h)})})}async getSync(e){return new Promise((r,t)=>{chrome.storage.sync.get([e],s=>{if(chrome.runtime.lastError)return t(chrome.runtime.lastError);r(s)})})}}const w={JSON:{"Content-Type":"application/json"}},n={NO_WEBHOOK_URL:"No webhook URL configured",WEBHOOK_POSTED:"Webhook posted",NO_MEETING_FOUND:"No meetings found. Maybe attend one?",EMPTY_MEETING_DATA:"Empty transcript and chatMessages",WEBHOOK_FAILED:"Webhook failed"},a={CONFIG:"configuration",MEETING:"meeting"};class O{constructor(e,r){this.storage=e,this.browser=r}async post(e,r){const t=await fetch(e,{method:"POST",headers:w.JSON,body:JSON.stringify(r)});if(!t.ok)throw new Error(`${n.WEBHOOK_FAILED}: ${t.status} ${t.statusText}`);await this.storage.remove(a.MEETING),this.browser.reload()}async process(){const e=await this.storage.getSync(a.CONFIG);if(!e.config.webhookUrl)return n.NO_WEBHOOK_URL;const r=await this.pickupMeeting();return await this.post(e.config.webhookUrl,r),n.WEBHOOK_POSTED}async pickupMeeting(){const e=await this.storage.get(a.MEETING);if(!e.meeting.startAt)throw new Error(n.NO_MEETING_FOUND);if(!e.meeting.transcript.length&&!e.meeting.chatMessages.length)throw new Error(n.EMPTY_MEETING_DATA);return e.meeting}}class y{reload(){chrome.runtime.reload()}sendMessage(e){chrome.runtime.sendMessage(e)}}const S=new y,i=new u,f=new O(i,S),p=new d([new E(i),new l(f,i)]);chrome.runtime.onMessage.addListener((o,e,r)=>p.dispatch(o,r));
